name: main
on: push
jobs:
  main:
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v3
      name: checkout
    - name: build
      shell: cmd
      run: |
        set PATH=C:\Program Files\Git\usr\bin;C:\Program Files\Git\mingw64\bin;%PATH%
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        if not exist llvm-project-15.0.0rc3.src.tar.xz curl -L -o llvm-project-15.0.0rc3.src.tar.xz https://github.com/llvm/llvm-project/releases/download/llvmorg-15.0.0-rc3/llvm-project-15.0.0rc3.src.tar.xz
        if not exist llvm-project (
        mkdir llvm-project
        tar xf llvm-project-15.0.0rc3.src.tar.xz --directory=llvm-project --strip-components=1
        )
        pushd llvm-project
        pushd clang\tools
        if not exist "clang-mute" mkdir "clang-mute"
        echo add_clang_subdirectory(clang-mute) >> CMakeLists.txt
        popd
        copy /y ..\main.cpp clang\tools\clang-mute
        copy /y ..\CMakeLists.txt clang\tools\clang-mute
        copy /y ..\version.h.in clang\tools\clang-mute
        if not exist "build" mkdir "build"
        pushd build
        cmake -DLLVM_ENABLE_PROJECTS="clang" -DCMAKE_BUILD_TYPE=Release -G Ninja -D CMAKE_C_COMPILER=cl -D CMAKE_CXX_COMPILER=cl ../llvm
        ninja clang-mute
        popd
        popd
    - name: upload
      uses: actions/upload-artifact@v3
      with:
        name: clang-mute
        path: |
          llvm-project\build\bin\clang-mute.exe
    - name: release
      uses: ncipollo/release-action@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        artifacts: |
          llvm-project\build\bin\clang-mute.exe
        token: ${{ secrets.GITHUB_TOKEN }}
